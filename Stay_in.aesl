<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="200" name="MOTOR"/>
<constant value="500" name="SEUIL"/>
<constant value="25" name="TIMER0"/>
<constant value="2000" name="PROXH"/>
<constant value="1000" name="TIMER1"/>
<constant value="3500" name="PROXHT"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II"># Thymio II : How fast is Thymio
# Projet par N.Mojon
# declaration des constante
# MOTOR puissance du moteur
# SEUIL	Seuil quand thymio detect le tape


var state 		#0 = off, 1 = Recherche , 2 = trou ,3 = trouver, 9 = perdu
var test
var i
var compteur
var limite
call sound.system(-1)

###########################################################################################################################

sub intitiate
motor.left.target = 0
motor.right.target = 0
timer.period[0] = TIMER0
timer.period[1] = TIMER1
state = 1
compteur = 0
limite = 0
call leds.circle(0,0,0,0,0,0,0,0)
call leds.top(0,32,0)

################################################################

sub chercher

		motor.left.target = MOTOR 
		motor.right.target = MOTOR 
		
	if prox.ground.reflected[0] &lt;250 or prox.ground.reflected[1] &lt; 250 then
	
		state = 2
		
	elseif prox.ground.reflected[0] > 500 or prox.ground.reflected[1] > 500 then
	
		state = 2
		
	elseif prox.horizontal[4] > PROXHT and prox.horizontal[0] > PROXHT then
	
		state = 2
		
	elseif prox.horizontal[3] > PROXH and prox.horizontal[4] > PROXH and prox.horizontal[0] > PROXH and  prox.horizontal[1] > PROXH then
	
		state = 2
		
	elseif  prox.horizontal[2] > PROXH then
	
			motor.left.target = MOTOR
			motor.right.target = -MOTOR

	elseif  prox.horizontal[3] > PROXH and prox.horizontal[4] > PROXH then
	
			motor.left.target = -MOTOR
			motor.right.target = MOTOR
			
	elseif prox.horizontal[0] > PROXH and  prox.horizontal[1] > PROXH  then
	
			motor.left.target = MOTOR
			motor.right.target = -MOTOR

	elseif  prox.horizontal[4] > PROXHT then
	
			motor.left.target = -MOTOR
			motor.right.target = MOTOR
			
	elseif  prox.horizontal[0] > PROXHT then
	
			motor.left.target = MOTOR
			motor.right.target = -MOTOR 
	end
##################################################################
sub trou1
	
	if  prox.horizontal[5] > 2500 or prox.horizontal[5] > 2500 then
		
		motor.left.target = MOTOR 
		motor.right.target = -MOTOR
		
	else
	
		motor.left.target = -MOTOR 
		motor.right.target = -MOTOR
		
	end

##################################################################
sub trou2
	
		motor.left.target = MOTOR 
		motor.right.target = -MOTOR 

##################################################################
sub trouve
		
		

##################################################################
sub perdu

		motor.left.target = 0
		motor.right.target = 0
		call leds.circle(5,5,5,5,5,5,5,5)
		call leds.top(32,0,0)

##################################################################
onevent button.center
	if  button.center == 1 then
		state = 0
end

onevent timer1

	limite++
	
	if  limite == 60 then
		state = 9
		limite = 0
	end

onevent timer0

	if  state == 0 then
		callsub intitiate
	end

	if state == 1 then
		callsub chercher
	end
	
	if  state == 2 then
		compteur++
		if  compteur &lt; 50 then
			callsub trou1
		else 
			callsub trou2
		end
	end 
	if  compteur == 100 then
		compteur = 0
		state = 1
	end
	
	if  state == 3 then
		callsub trouve
	end
	
	if  state == 9 then
		callsub perdu
	end
	
onevent button.backward 
	if button.backward == 1 then
		motor.left.target = 0
		motor.right.target = 0
		state = 9
		call leds.circle(0,0,0,0,0,0,0,0)
		call leds.top(0,0,0)		
	end
	

	
</node>


</network>
