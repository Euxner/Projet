<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="200" name="SCAN"/>
<constant value="100" name="TURN"/>
<constant value="200" name="POUNCE"/>
<constant value="1250" name="TIMER"/>
<constant value="400" name="DETECTION"/>
<constant value="3500" name="COLLISION"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II"># Thymio II : cat's and mouse
# Projet par N.Mojon

# declaration des constante
# SCAN			- Vitesse des moteurs pendant la phase de SCAN
# TURN			- Vitesse des moteurs la phase TURN
# POUNCE		- Vitesse des moteurs durant la phase de POUNCE
# TIMER			- Temps entre les changements de direction
# DETECTION		- Proximité de la souris
# COLLISION 	- Proximité de la souris avant collision

var state 		#0 = off, 1 = search, 2 = turn,3 = pounce
var motor_state # +1 = right = -1 left
var sound_state # 0-4
var i			# variable de boucle
var j

call sound.system(-1)
call leds.top(0,0,0)
call leds.circle(0, 0, 0, 0, 0, 0, 0, 0)

sub intitiate
call leds.top(0, 0, 0)
call leds.temperature(0, 0)
motor.left.target = 0
motor.right.target = 0
state = 0
motor_state = -1
sound_state = 0
timer.period[0] = TIMER

sub scan
call leds.top(32,0,0)
if motor_state == -1  then
	motor.left.target = SCAN
	motor.right.target = -SCAN
	motor_state = 1
elseif  motor_state == 1 then
	motor.left.target = -SCAN
	motor.right.target = SCAN
	motor_state = -1
end
for i in 0:4 do
	
	if  prox.horizontal[i] > DETECTION then
		state = 2
		motor.left.target = 0
		motor.right.target = 0		
	end
end

sub turn
call leds.top(0,32,0)
if (prox.horizontal[2] > DETECTION) then
	motor.left.target = POUNCE
    motor.right.target = POUNCE
    state = 3
  elseif (prox.horizontal[0] > DETECTION) or
    (prox.horizontal[1] > DETECTION) then
	motor.left.target = -TURN
    motor.right.target = TURN
  elseif (prox.horizontal[3] > DETECTION) or
    (prox.horizontal[4] > DETECTION) then
	motor.left.target = TURN
    motor.right.target = -TURN
  end
  
sub pounce
call leds.top(0,0,32)
for j in 0:4 do
	if  prox.horizontal[j] > COLLISION then
		motor.left.target = 0
		motor.right.target = 0		
	end
end

onevent button.center
if  button.center == 1 then
	state = 0	
	callsub intitiate
	state = 1
end

onevent timer0

if  state == 1 then

callsub scan

elseif state == 2 then

callsub turn

elseif state == 3 then

callsub pounce

end

onevent button.backward
if button.backward == 1 then
	motor.left.target = 0
	motor.right.target = 0
	state = 9
end</node>


</network>
